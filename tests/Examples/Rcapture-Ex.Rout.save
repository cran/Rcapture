
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "Rcapture"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('Rcapture')
> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("BBS2001")
> ### * BBS2001
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: BBS2001
> ### Title: Species Richness Data from the North American Breeding Bird
> ###   Survey (BBS) in 2001
> ### Aliases: BBS2001
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(BBS2001)
> desc <- descriptive(BBS2001, dfreq = TRUE, dtype = "nbcap", t = 50)
> plot(desc)
>    # Note in this plot the convex shape typical of model Mh.
> 
> cp <- closedp.0(BBS2001, dfreq = TRUE, dtype = "nbcap", t = 50, t0 = 20)
> cp

Number of captured units: 71 

Abundance estimations and model fits:
              abundance  stderr  deviance  df      AIC
M0                 71.1     0.2   214.075  18  270.028
Mh Chao (LB)       87.2    10.9    12.403  14   76.356
Mh Poisson2        71.1     0.3   170.128  17  228.081
Mh Darroch         74.0     2.0    34.733  17   92.687
Mh Gamma3.5       111.1    16.0    18.806  17   76.759

> plot(cp)
>    # The Gamma estimator has the smallest deviance and all 
>    # its residuals are small.
>    
>    # Let's calculate a profile confidence interval for the gamma 
>    # estimator:
> closedpCI.0(BBS2001, dfreq = TRUE, dtype = "nbcap", t = 50, t0 = 20,
+             m = "Mh", h = "Gamma", h.control = list(theta = 3.5))		

Number of captured units: 71 

Poisson estimation and model fit:
             abundance  stderr  deviance  df     AIC
Mh Gamma3.5      111.1      16    18.806  17  76.759

Multinomial estimation, 95% profile likelihood confidence interval:
             abundance  InfCL  SupCL
Mh Gamma3.5      109.1   86.2  150.6

> 
>    # One can also calculate a profile confidence interval for Chao's 
>    # lower bound:
> closedpCI.0(BBS2001,dfreq=TRUE,dtype="nbcap",t=50,t0=20,
+             m="Mh",h="Chao")   

Number of captured units: 71 

Poisson estimation and model fit:
              abundance  stderr  deviance  df     AIC
Mh Chao (LB)       87.2    10.9    12.403  14  76.356

Multinomial estimation, 95% profile likelihood confidence interval:
              abundance  InfCL  SupCL
Mh Chao (LB)       84.3     73  119.7

> 
> 
> 
> cleanEx()
> nameEx("HIV")
> ### * HIV
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: HIV
> ### Title: Epidemiological capture-recapture Data
> ### Aliases: HIV
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(HIV)
> desc <- descriptive(HIV, dfreq=TRUE)
> desc

Number of captured units: 1896 
 
Frequency statistics:
       fi    ui    vi    ni  
i = 1  1774   466   403   466
i = 2   115   593   578   630
i = 3     7   632   679   693
i = 4     0   205   236   236
fi: number of units captured i times
ui: number of units captured for the first time on occasion i
vi: number of units captured for the last time on occasion i
ni: number of units captured on occasion i

>   # 1774 out of 1896 individuals (94%) appear on one list only.
> 
> plot(desc)
>   # The fi plot is linear showing that heterogeneity is not a problem.  
>   # Models with a time (or list) effect and possible pairwise dependencies 
>   # between lists will be considered.
> 
> cp.m1 <- closedpCI.t(HIV, dfreq=TRUE, mX= ~ (c1+c2+c3+c4)^2, mname="Mt double interaction")
> cp.m1

Number of captured units: 1896 

Poisson estimation and model fit:
                       abundance  stderr  deviance  df     AIC
Mt double interaction    23443.5  9594.9     3.037   4  92.073

Multinomial estimation, 95% profile likelihood confidence interval:
                       abundance    InfCL    SupCL
Mt double interaction    23269.8  10027.6  50046.3

>   # The model fits well. Let's find out which interactions are important.
> summary(cp.m1$fit)$coefficients
              Estimate Std. Error     z value      Pr(>|z|)
(Intercept)  9.9780167  0.4452368  22.4105827 3.103499e-111
beta1       -3.9758604  0.4438850  -8.9569599  3.337529e-19
beta2       -3.6785194  0.4437085  -8.2903961  1.128719e-16
beta3       -3.5469201  0.4440686  -7.9873239  1.378994e-15
beta4       -4.6582017  0.4453831 -10.4588655  1.334439e-25
lambda1_2    1.1545857  0.4329136   2.6670119  7.652896e-03
lambda1_3    0.4810600  0.4305346   1.1173552  2.638425e-01
lambda1_4    0.3339371  0.5168483   0.6461027  5.182129e-01
lambda2_3    0.8266913  0.4291786   1.9262176  5.407721e-02
lambda2_4    0.7884198  0.4612659   1.7092522  8.740424e-02
lambda3_4    0.6951611  0.4705025   1.4774867  1.395452e-01
>   # Eliminating the non significant interactions stepwise shows that only 
>   # the [1,2] interaction is important.
> 
> closedpCI.t(HIV, dfreq=TRUE, mX= ~ . + c1:c2, mname="Mt interaction 1,2")

Number of captured units: 1896 

Poisson estimation and model fit:
                    abundance  stderr  deviance  df    AIC
Mt interaction 1,2    12318.5  1188.7     7.614   9  86.65

Multinomial estimation, 95% profile likelihood confidence interval:
                    abundance  InfCL    SupCL
Mt interaction 1,2      12308  10266  14992.3

> 
> 
> 
> cleanEx()
> nameEx("bunting")
> ### * bunting
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bunting
> ### Title: Lazuli Bunting Data
> ### Aliases: bunting
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(bunting)
> descriptive(bunting,dfreq=TRUE)

Number of captured units: 1681 
 
Frequency statistics:
       fi    ui    vi    ni  
i = 1  1430   168   132   168
i = 2   180   367   359   398
i = 3    37    65    64    88
i = 4    23   230   213   264
i = 5     7   255   232   304
i = 6     2   256   246   322
i = 7     1   240   247   323
i = 8     1   100   188   188
fi: number of units captured i times
ui: number of units captured for the first time on occasion i
vi: number of units captured for the last time on occasion i
ni: number of units captured on occasion i

>   # 1430 birds of a total of 1681 birds seen (85%) were caught only once. 
>   # This suggests the presence of transient birds at each capture occasion. 
> 
> op.m1<-openp(bunting,dfreq=TRUE)
> op.m1$model.fit
             deviance     df       AIC
fitted model   219.41    234  456.0147
> plot(op.m1)
>   # The residuals plot shows large residuals for the birds caught twice or
>   # more while the residuals are small for birds caught once. The Jolly-Seber 
>   # model does not fit well and the likely presence of transients might 
>   # cause that. Let's remove the birds caught only once from the analysis.
> 
> keep2<-apply(histpos.t(8),1,sum)>1
> op.m2<- openp(bunting,dfreq=TRUE,keep=keep2)
Warning in openp(bunting, dfreq = TRUE, keep = keep2) :
  the design matrix is not of full rank; some loglinear parameter estimations cannot be evaluated
> op.m2$model.fit
             deviance     df       AIC
fitted model 125.1796    228  302.5521
>   # The deviance drop of 94 for 6 degrees of freedom is highly significant.
> plot(op.m2)
>   # The residual plot still shows Pearson residuals larger than 4. We redo
>   # the analysis without the transient birds and without the large residuals.
> 
> keep3p<-residuals(op.m2$glm,type="pearson")<4
> num3<-((1:255)[keep2])[keep3p]
> keep3<-rep(FALSE,255)
> keep3[num3]<-TRUE
> op.m3<- openp(bunting,dfreq=TRUE,keep=keep3)
Warning in openp(bunting, dfreq = TRUE, keep = keep3) :
  the design matrix is not of full rank; some loglinear parameter estimations cannot be evaluated
> cbind(op.m2$survivals,op.m3$survivals)
               estimate     stderr  estimate     stderr
period 1 -> 2        NA         NA        NA         NA
period 2 -> 3 0.4851117 0.13125375 0.4815109 0.14167601
period 3 -> 4 0.6742944 0.13207217 0.6188964 0.13535331
period 4 -> 5 0.7287239 0.12854646 0.7013263 0.12751218
period 5 -> 6 0.5176471 0.09566484 0.5012495 0.09560564
period 6 -> 7 0.5559809 0.08310532 0.5512693 0.08368251
period 7 -> 8        NA         NA        NA         NA
>   # These changes have little impact on the survival estimates. 
> 
>   # We now test the equality of the survival probabilities and estimate its 
>   # common value phi. Least squares estimates of phi and its standard error:
> siginv<-solve(op.m2$cov[8:12,8:12])
> phi<-t(rep(1,5))%*%siginv%*%op.m2$survivals[2:6,1] / 
+      (t(rep(1,5))%*%siginv%*%rep(1,5))
> se<-1/sqrt(t(rep(1,5))%*%siginv%*%rep(1,5))
> cbind(estimate=phi,stderr=se)
          [,1]      [,2]
[1,] 0.5872904 0.0342289
>   # The chi-square goodness of fit statistic for a constant survival 
>   # and its pvalue are:
> chisq4<-t(op.m2$survivals[2:6,1]-phi*rep(1,5))%*%siginv%*% 
+         (op.m2$survivals[2:6,1]-phi*rep(1,5))
> cbind(chi2stat=chisq4,pvalue=1-pchisq(chisq4,df=4))
        [,1]      [,2]
[1,] 2.62006 0.6232736
>   # The hypothesis of a constant survival is accepted.
> 
> 
> 
> cleanEx()
> nameEx("catb")
> ### * catb
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: catb
> ### Title: Catbird Site Occupancy Data
> ### Aliases: catb
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(catb)
> desc <- descriptive(catb, dfreq = TRUE, dtype = "nbcap", t = 11)
> plot(desc)
>    # The heterogeneity graph is mildly convex, mostly because of 
>    # 2 sites where the catbirds have been seen six times.
> 
> closedp.0(catb, dfreq = TRUE, dtype = "nbcap", t = 11)

Number of captured units: 19 

Abundance estimations and model fits:
              abundance  stderr  deviance  df     AIC
M0                 20.3     1.4     8.047   9  27.678
Mh Chao (LB)       22.6     3.8     4.939   7  28.570
Mh Poisson2        20.5     1.4     7.647   8  29.278
Mh Darroch         22.3     3.1     6.062   8  27.693
Mh Gamma3.5        24.7     6.4     5.912   8  27.544

>    # The residuals are OK. The occupancy rate (N/50) estimates 
>    # varies between 40.6% for M0 and 49.4% for Mh Gamma.
>    # One could also try fitting M0 removing the 2 unusual sites:
> closedp.0(catb, dfreq = TRUE, dtype = "nbcap", t = 11, t0 = 5)

Number of captured units: 19 

Abundance estimations and model fits:
              abundance  stderr  deviance  df     AIC
M0                 21.3     2.0     2.132   3  19.150
Mh Chao (LB)       22.3     3.5     1.899   2  20.917
Mh Poisson2        20.7     1.9     1.892   2  20.909
Mh Darroch         20.9     2.6     2.104   2  21.122
Mh Gamma3.5        21.2     3.5     2.132   2  21.149

>    # M0 fits very well and the occupancy rate estimate is 42.6%.
> 
> 
> 
> cleanEx()
> nameEx("closedp.Mtb")
> ### * closedp.Mtb
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: closedp.Mtb
> ### Title: Closed Population Capture-Recapture Model Mtb
> ### Aliases: closedp.Mtb print.closedp.Mtb
> ### Keywords: models
> 
> ### ** Examples
> 
> data(hare)
> closedp.Mtb(hare)

Number of captured units: 68 

Abundance estimation and model fit:
     abundance  stderr  deviance  df      AIC
Mtb       71.7     3.6    57.644  55  155.835

Note: Model Mtb is not loglinear.
The abundance estimation for this model can be unstable.

> 
> ## Example producing an unstable estimate
> data(mvole)
> period4<-mvole[,16:20]
> closedp.Mtb(period4)

Number of captured units: 57 

Abundance estimation and model fit:
     abundance       stderr  deviance  df      AIC
Mtb   25435690  61943120344    57.712  24  131.714

Note: Model Mtb is not loglinear.
The abundance estimation for this model can be unstable.

> 
> 
> 
> cleanEx()
> nameEx("closedp")
> ### * closedp
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: closedp
> ### Title: Loglinear Models for Closed Population Capture-Recapture
> ###   Experiments
> ### Aliases: closedp closedp.t closedp.0 print.closedp boxplot.closedp
> ###   plot.closedp
> ### Keywords: models
> 
> ### ** Examples
> 
> data(hare)
> hare.closedp<-closedp.t(hare)
> hare.closedp

Number of captured units: 68 

Abundance estimations and model fits:
               abundance  stderr  deviance  df      AIC
M0                  75.4     3.5    68.516  61  154.707
Mt                  75.1     3.4    58.314  56  154.505
Mh Chao (LB)        79.8     6.4    58.023  58  150.214
Mh Poisson2         81.5     5.7    59.107  60  147.298
Mh Darroch          90.4    11.6    61.600  60  149.791
Mh Gamma3.5        100.6    21.7    62.771  60  150.961
Mth Chao (LB)       79.6     6.3    47.115  52  151.305
Mth Poisson2        81.1     5.6    48.137  55  146.327
Mth Darroch         90.5    11.7    50.706  55  148.896
Mth Gamma3.5       101.6    22.4    51.956  55  150.147
Mb                  81.1     8.3    67.027  60  155.217
Mbh                 74.2    14.6    63.257  59  153.447

> boxplot(hare.closedp)
> 
> data(mvole)
> period3<-mvole[,11:15]
> closedp.t(period3)

Number of captured units: 49 

Abundance estimations and model fits:
               abundance  stderr  deviance  df      AIC
M0                  51.1     1.6    66.964  29  122.895
Mt                  50.9     1.6    61.208  25  125.138
Mh Chao (LB)        71.9    14.2    33.556  26   95.486
Mh Poisson2         61.0     6.3    37.902  28   95.833
Mh Darroch          93.2    26.7    34.611  28   92.541
Mh Gamma3.5        203.2   119.1    33.984  28   91.915
Mth Chao (LB)       71.0    13.7    26.120  22   96.051
Mth Poisson2        60.5     6.1    30.652  24   96.582
Mth Darroch         93.1    26.6    27.178  24   93.108
Mth Gamma3.5       209.9   124.3    26.539  24   92.470
Mb                  51.0     2.0    66.964  28  124.894
Mbh                 52.6     9.1    66.256  27  126.187

> 
> data(BBS2001)
> BBS.closedp<-closedp.0(BBS2001,dfreq=TRUE,dtype="nbcap",t=50,t0=20)
> BBS.closedp

Number of captured units: 71 

Abundance estimations and model fits:
              abundance  stderr  deviance  df      AIC
M0                 71.1     0.2   214.075  18  270.028
Mh Chao (LB)       87.2    10.9    12.403  14   76.356
Mh Poisson2        71.1     0.3   170.128  17  228.081
Mh Darroch         74.0     2.0    34.733  17   92.687
Mh Gamma3.5       111.1    16.0    18.806  17   76.759

> plot(BBS.closedp)
> 
> ### Seber (1982) p.107
> # When there is 2 capture occasions, the heterogeneity models cannot be fitted
> X <- matrix(c(1,1,167,1,0,781,0,1,254),byrow=TRUE,ncol=3)
> closedp.t(X,dfreq=TRUE)

Number of captured units: 1202 

Abundance estimations and model fits:
    abundance  stderr  deviance  df      AIC
M0     2805.6   164.1   281.334   1  308.166
Mt     2389.9   130.4     0.000   0   28.831
Mb     1295.0    17.3     0.000   0   28.831

Note: When there is 2 capture occasions, only models M0, Mt and Mb are fitted.

> 
> ### Example of captures in continuous time
> ### Illegal immigrants data
> data(ill)
> closedp.0(ill, dtype="nbcap", dfreq=TRUE, t=Inf)

Number of captured units: 1880 

Abundance estimations and model fits:
              abundance  stderr  deviance  df     AIC
M0               7079.9   365.8    61.811   4  95.971
Mh Chao (LB)     9273.5   662.6     1.534   1  41.695
Mh Poisson2      8617.6   537.3    26.341   3  62.502
Mh Darroch      15562.1  1808.5     7.277   3  43.438
Mh Gamma3.5     29058.3  5496.8     3.661   3  39.822

> 
> 
> 
> cleanEx()
> nameEx("closedp.bc")
> ### * closedp.bc
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: closedp.bc
> ### Title: Bias Correction for Closed Population Loglinear Models
> ### Aliases: closedp.bc print.closedp.bc
> ### Keywords: models
> 
> ### ** Examples
> 
> data(mvole)
> period3<-mvole[,11:15]
> closedp.bc(period3,m="Mh",h="Darroch")

Number of captured units: 49 

Abundance estimation with bias correction:
            abundance  stderr
Mh Darroch       85.8    22.2

> closedp.bc(period3,m="Mh",h="Gamma",theta=3.5)

Number of captured units: 49 

Abundance estimation with bias correction:
             abundance  stderr
Mh Gamma3.5      158.7    84.4

> 
> data(BBS2001)
> closedp.bc(BBS2001,dfreq=TRUE,dtype="nbcap",t=50,t0=20,
+            m="Mh",h="Gamma",theta=3.5)

Number of captured units: 71 

Abundance estimation with bias correction:
             abundance  stderr
Mh Gamma3.5      110.9    15.8

> 
> # Seber (1982) p.107
> # When there are 2 capture occasions, only models M0 and Mt can be fitted
> X <- matrix(c(1,1,167,1,0,781,0,1,254),byrow=TRUE,ncol=3)
> closedp.bc(X,dfreq=TRUE, m="M0")

Number of captured units: 1202 

Abundance estimation with bias correction:
    abundance  stderr
M0     2794.5   162.8

> closedp.bc(X,dfreq=TRUE, m="Mt") 

Number of captured units: 1202 

Abundance estimation with bias correction:
    abundance  stderr
Mt     2382.8   129.1

> 
> 
> 
> cleanEx()
> nameEx("closedp.custom")
> ### * closedp.custom
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: closedp.custom
> ### Title: Customization of a Loglinear Model for Closed Populations
> ###   Capture-Recapture Experiments
> ### Aliases: closedp.custom closedp.mX closedp.h print.closedp.custom
> ###   boxplot.closedp.custom
> ### Keywords: models
> 
> ### ** Examples
> 
> data(HIV)
> mat<-histpos.t(4)
> mX2<-cbind(mat,mat[,1]*mat[,2])
> closedp.mX(HIV,dfreq=TRUE,mX=mX2)

Number of captured units: 1896 

Abundance estimation and model fit:
                  abundance  stderr  deviance  df    AIC
Customized model    12318.5  1188.7     7.614   9  86.65

> 
> data(mvole)
> period3<-mvole[,11:15]
> psi <- function(x) { -log(3.5 + x) + log(3.5) }
> closedp.h(period3, h = psi)

Number of captured units: 49 

Abundance estimation and model fit:
        abundance  stderr  deviance  df     AIC
Mh psi      203.2   119.1    33.984  28  91.915

> 
> 
> 
> cleanEx()
> nameEx("closedpCI")
> ### * closedpCI
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: closedpCI
> ### Title: Customization of a Loglinear Model and Confidence Interval for
> ###   Abundance Estimation in Closed Population Capture-Recapture
> ###   Experiments
> ### Aliases: closedpCI closedpCI.t closedpCI.0 print.closedpCI plotCI
> ###   boxplot.closedpCI plot.closedpCI
> ### Keywords: models
> 
> ### ** Examples
> 
> data(hare)
> CI<-closedpCI.t(hare, m = "Mth", h = "Poisson", h.control = list(theta = 2))
> CI

Number of captured units: 68 

Poisson estimation and model fit:
              abundance  stderr  deviance  df      AIC
Mth Poisson2       81.1     5.6    48.137  55  146.327

Multinomial estimation, 95% profile likelihood confidence interval:
              abundance  InfCL  SupCL
Mth Poisson2       80.1   71.8   93.8

> plotCI(CI)
> 
> data(HIV)
> mat<-histpos.t(4)
> mX2<-cbind(mat,mat[,1]*mat[,2])
> closedpCI.t(HIV, dfreq = TRUE, mX = mX2, mname = "Mt interaction 1,2")

Number of captured units: 1896 

Poisson estimation and model fit:
                    abundance  stderr  deviance  df    AIC
Mt interaction 1,2    12318.5  1188.7     7.614   9  86.65

Multinomial estimation, 95% profile likelihood confidence interval:
                    abundance  InfCL    SupCL
Mt interaction 1,2      12308  10266  14992.3

> # which can be obtained more conveniently with
> closedpCI.t(HIV, dfreq = TRUE, mX = ~ . + c1:c2, mname = "Mt interaction 1,2")

Number of captured units: 1896 

Poisson estimation and model fit:
                    abundance  stderr  deviance  df    AIC
Mt interaction 1,2    12318.5  1188.7     7.614   9  86.65

Multinomial estimation, 95% profile likelihood confidence interval:
                    abundance  InfCL    SupCL
Mt interaction 1,2      12308  10266  14992.3

> 
> data(BBS2001)
> CI0<-closedpCI.0(BBS2001, dfreq = TRUE, dtype = "nbcap", t = 50, t0 = 20,
+                  m = "Mh", h = "Gamma", h.control = list(theta = 3.5))
> CI0

Number of captured units: 71 

Poisson estimation and model fit:
             abundance  stderr  deviance  df     AIC
Mh Gamma3.5      111.1      16    18.806  17  76.759

Multinomial estimation, 95% profile likelihood confidence interval:
             abundance  InfCL  SupCL
Mh Gamma3.5      109.1   86.2  150.6

> plot(CI0)
> plotCI(CI0)
> 
> ### As an alternative to a gamma model, one can fit a negative Poisson model.
> ### It is appropriate in experiments where very small capture probabilities
> ### are likely. It can lead to very large estimators of abundance. 
> data(mvole)
> period3 <- mvole[, 11:15]
> psi <- function(x) { 0.5^x - 1 }
> closedpCI.t(period3, m = "Mh", h = psi)

Number of captured units: 49 

Poisson estimation and model fit:
        abundance  stderr  deviance  df     AIC
Mh psi      806.1   783.6    34.025  28  91.955

Multinomial estimation, 95% profile likelihood confidence interval:
       abundance InfCL   SupCL
Mh psi     781.1 136.8 >2418.4

> 
> ### Example of normal heterogeneous models
> ### diabetes data of Bruno et al. (1994)
> histpos <- histpos.t(4)
> diabetes <- cbind(histpos, c(58,157,18,104,46,650,12,709,14,20,7,74,8,182,10))
> # chosen interaction set I in Rivest (2011)
> closedpCI.t(X=diabetes, dfreq=TRUE, mX= ~ . + c1:c3 + c2:c4 + c3:c4, 
+             h="Normal", mname="Mth normal with I")

Number of captured units: 2069 

Abundance estimation, 95% confidence interval and model fit:
                   abundance  stderr   InfCL   SupCL  deviance  df      AIC
Mth normal with I     2763.5   100.9  2592.3  2990.8     8.224   6  111.386

> 
> ### Example of captures in continuous time
> ### Illegal immigrants data
> data(ill)
> closedpCI.0(ill, dtype="nbcap", dfreq=TRUE, t=Inf, m="Mh", h="LB")

Number of captured units: 1880 

Poisson estimation and model fit:
       abundance  stderr  deviance  df     AIC
Mh LB     9273.5   662.6     1.534   1  41.695

Multinomial estimation, 95% profile likelihood confidence interval:
       abundance   InfCL  SupCL
Mh LB     9267.5  8088.2  10704

> 
> 
> 
> cleanEx()
> nameEx("descriptive")
> ### * descriptive
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: descriptive
> ### Title: Descriptive Statistics
> ### Aliases: descriptive print.descriptive plot.descriptive
> ### Keywords: univar
> 
> ### ** Examples
> 
> data(hare)
> hare.desc<-descriptive(hare)
> hare.desc

Number of captured units: 68 
 
Frequency statistics:
       fi  ui  vi  ni
i = 1  25  16   3  16
i = 2  22  24   6  28
i = 3  13   9   6  20
i = 4   5   9   9  26
i = 5   1   6  12  23
i = 6   2   4  32  32
fi: number of units captured i times
ui: number of units captured for the first time on occasion i
vi: number of units captured for the last time on occasion i
ni: number of units captured on occasion i

> plot(hare.desc)
> 
> data(catb)
> catb.desc1<-descriptive(catb,dfreq=TRUE,dtype="nbcap",t=11)
> plot(catb.desc1)
> # To illustrate the option t=Inf
> catb.desc2<-descriptive(catb,dfreq=TRUE,dtype="nbcap",t=Inf)
> plot(catb.desc2)
> # the y coordinate has changed
> 
> 
> 
> cleanEx()
> nameEx("duck")
> ### * duck
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: duck
> ### Title: Eider Duck Data
> ### Aliases: duck
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(duck)
> op.m1<-openp(duck,dfreq=TRUE)
> op.m1$model.fit
             deviance     df       AIC
fitted model 83.35991     49  328.8301
>   # The pvalue of the goodness of fit test based on the deviance is
> 1-pchisq(op.m1$model.fit[1,1],df=49)
[1] 0.001592682
> plot(op.m1)
>   # The residual plot shows a large residual for the 13 individuals 
>   # captured all the times. We redo the analysis without them.
> 
> keep2<-apply(histpos.t(6),1,sum)!=6
> op.m2<-openp(duck,dfreq=TRUE,keep=keep2)
> op.m2$model.fit
             deviance     df       AIC
fitted model 67.31143     48  308.3659
> 1-pchisq(op.m2$model.fit[1,1],df=48)
[1] 0.03427131
>   # The fit is still not satisfactory.
> plot(op.m2)
>   # The residual plot has the convex shape characteristic of 
>   # heterogeneity in the capture probabilities. We also remove the 
>   # individuals caught at 5 periods out of 6.
> 
> keep3<-apply(histpos.t(6),1,sum)<5
> op.m3<-openp(duck,dfreq=TRUE,keep=keep3)
> op.m3$model.fit
             deviance     df       AIC
fitted model 56.83066     42  277.2014
> 1-pchisq(op.m3$model.fit[1,1],df=42)
[1] 0.06298297
>   # The fit is better but there is still heterogeneity in the data. 
> 
>   # To investigate whether the capture probabilities are homogeneous, 
>   # one can fit a model with equal capture probabilities.
> op.m4<-openp(duck,dfreq=TRUE,m="ep",keep=keep3)
> op.m4$model.fit
             deviance     df       AIC
fitted model 117.9115     47  328.2822
>   # It gives a much larger deviance; this model is not considered anymore.
> 
>   # We now investigate models for the growth rate N[i+1]/N[i] of this 
>   # population using the multivariate normal distribution for the 
>   # abundance estimates. The growth rates and their standard errors are
> growth<-op.m3$N[3:5]/op.m3$N[2:4]
> partial<-matrix(c(-op.m3$N[3]/op.m3$N[2]^2,1/op.m3$N[2],0,0,0,
+                   -op.m3$N[4]/op.m3$N[3]^2,1/op.m3$N[3],0,0,0,
+ 		  -op.m3$N[5]/op.m3$N[4]^2,1/op.m3$N[4]),3,4,byrow=TRUE)
> sig<-partial%*%op.m3$cov[9:12,9:12]%*%t(partial)
> cbind(estimate=growth,stderr=sqrt(diag(sig)))
      estimate     stderr
[1,] 1.2218081 0.11281160
[2,] 0.8000063 0.07563975
[3,] 1.2771890 0.08512487
>   # An estimate for the common growth rate is
> siginv<-solve(sig)
> growth.e<-t(rep(1,3))%*%siginv%*%growth/(t(rep(1,3))%*%siginv%*%rep(1,3))
> se<-1/sqrt(t(rep(1,3))%*%siginv%*%rep(1,3))
> cbind(estimate=growth.e,stderr=se)
         [,1]       [,2]
[1,] 1.037558 0.03187539
>   # A chi-square statistic for testing the equality of the growth rates 
>   # and its pvalue
> chisq2<-t(growth-growth.e*rep(1,3))%*%siginv%*%(growth-growth.e*rep(1,3))
> c(chi2stat=chisq2,pvalue=1-pchisq(chisq2,df=2))
    chi2stat       pvalue 
13.533382667  0.001151498 
>   # The hypothesis of a common growth rate is rejected
> 
> 
> 
> cleanEx()
> nameEx("hare")
> ### * hare
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: hare
> ### Title: Snowshoe Hare Data
> ### Aliases: hare
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(hare)
> desc <- descriptive(hare)
> plot(desc)
>   # The fi plot shows that the two animals caught on all occasions create 
>   # some heterogeneity in the capture probabilities.
> 
> closedp(hare)

Number of captured units: 68 

Abundance estimations and model fits:
               abundance  stderr  deviance  df      AIC
M0                  75.4     3.5    68.516  61  154.707
Mt                  75.1     3.4    58.314  56  154.505
Mh Chao (LB)        79.8     6.4    58.023  58  150.214
Mh Poisson2         81.5     5.7    59.107  60  147.298
Mh Darroch          90.4    11.6    61.600  60  149.791
Mh Gamma3.5        100.6    21.7    62.771  60  150.961
Mth Chao (LB)       79.6     6.3    47.115  52  151.305
Mth Poisson2        81.1     5.6    48.137  55  146.327
Mth Darroch         90.5    11.7    50.706  55  148.896
Mth Gamma3.5       101.6    22.4    51.956  55  150.147
Mb                  81.1     8.3    67.027  60  155.217
Mbh                 74.2    14.6    63.257  59  153.447

>   # The best fitting model Mth Poisson2(N = 81.1, s.e.=5.7) has an AIC of 146. 
> closedpCI.t(hare, m = "Mth", h = "Poisson", h.control = list(theta = 2))

Number of captured units: 68 

Poisson estimation and model fit:
              abundance  stderr  deviance  df      AIC
Mth Poisson2       81.1     5.6    48.137  55  146.327

Multinomial estimation, 95% profile likelihood confidence interval:
              abundance  InfCL  SupCL
Mth Poisson2       80.1   71.8   93.8

> 
>   # One can compare the fit of this model with that obtained by removing the
>   # 2 hares caught 6 times. This can be done by adding a column to the design 
>   # matrix for Mt taking the value 1 for the capture history (1,1,1,1,1,1).
> col <- rep(0, 2^6-1)
> mat <- histpos.t(6)
> col[apply(mat, 1 ,sum) == 6] <- 1
> closedpCI.t(hare, mX=cbind(mat, col), mname="Mt without 111111")

Number of captured units: 68 

Poisson estimation and model fit:
                   abundance  stderr  deviance  df      AIC
Mt without 111111       76.8     3.9    47.894  55  146.085

Multinomial estimation, 95% profile likelihood confidence interval:
                   abundance  InfCL  SupCL
Mt without 111111         76   70.1   85.4

>   # This gives N = 76.8 (s.e.=3.9) with an AIC of 146.
> 
> 
> 
> cleanEx()
> nameEx("histpos")
> ### * histpos
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: histpos
> ### Title: Possible Capture Histories
> ### Aliases: histpos histpos.t histpos.0
> ### Keywords: manip
> 
> ### ** Examples
> 
> histpos.t(5)
      [,1] [,2] [,3] [,4] [,5]
 [1,]    1    1    1    1    1
 [2,]    1    1    1    1    0
 [3,]    1    1    1    0    1
 [4,]    1    1    1    0    0
 [5,]    1    1    0    1    1
 [6,]    1    1    0    1    0
 [7,]    1    1    0    0    1
 [8,]    1    1    0    0    0
 [9,]    1    0    1    1    1
[10,]    1    0    1    1    0
[11,]    1    0    1    0    1
[12,]    1    0    1    0    0
[13,]    1    0    0    1    1
[14,]    1    0    0    1    0
[15,]    1    0    0    0    1
[16,]    1    0    0    0    0
[17,]    0    1    1    1    1
[18,]    0    1    1    1    0
[19,]    0    1    1    0    1
[20,]    0    1    1    0    0
[21,]    0    1    0    1    1
[22,]    0    1    0    1    0
[23,]    0    1    0    0    1
[24,]    0    1    0    0    0
[25,]    0    0    1    1    1
[26,]    0    0    1    1    0
[27,]    0    0    1    0    1
[28,]    0    0    1    0    0
[29,]    0    0    0    1    1
[30,]    0    0    0    1    0
[31,]    0    0    0    0    1
> histpos.0(5)
     [,1]
[1,]    5
[2,]    4
[3,]    3
[4,]    2
[5,]    1
> 
> histpos.0(rep(5,3))
       [,1] [,2] [,3]
  [1,]    5    5    5
  [2,]    5    5    4
  [3,]    5    5    3
  [4,]    5    5    2
  [5,]    5    5    1
  [6,]    5    5    0
  [7,]    5    4    5
  [8,]    5    4    4
  [9,]    5    4    3
 [10,]    5    4    2
 [11,]    5    4    1
 [12,]    5    4    0
 [13,]    5    3    5
 [14,]    5    3    4
 [15,]    5    3    3
 [16,]    5    3    2
 [17,]    5    3    1
 [18,]    5    3    0
 [19,]    5    2    5
 [20,]    5    2    4
 [21,]    5    2    3
 [22,]    5    2    2
 [23,]    5    2    1
 [24,]    5    2    0
 [25,]    5    1    5
 [26,]    5    1    4
 [27,]    5    1    3
 [28,]    5    1    2
 [29,]    5    1    1
 [30,]    5    1    0
 [31,]    5    0    5
 [32,]    5    0    4
 [33,]    5    0    3
 [34,]    5    0    2
 [35,]    5    0    1
 [36,]    5    0    0
 [37,]    4    5    5
 [38,]    4    5    4
 [39,]    4    5    3
 [40,]    4    5    2
 [41,]    4    5    1
 [42,]    4    5    0
 [43,]    4    4    5
 [44,]    4    4    4
 [45,]    4    4    3
 [46,]    4    4    2
 [47,]    4    4    1
 [48,]    4    4    0
 [49,]    4    3    5
 [50,]    4    3    4
 [51,]    4    3    3
 [52,]    4    3    2
 [53,]    4    3    1
 [54,]    4    3    0
 [55,]    4    2    5
 [56,]    4    2    4
 [57,]    4    2    3
 [58,]    4    2    2
 [59,]    4    2    1
 [60,]    4    2    0
 [61,]    4    1    5
 [62,]    4    1    4
 [63,]    4    1    3
 [64,]    4    1    2
 [65,]    4    1    1
 [66,]    4    1    0
 [67,]    4    0    5
 [68,]    4    0    4
 [69,]    4    0    3
 [70,]    4    0    2
 [71,]    4    0    1
 [72,]    4    0    0
 [73,]    3    5    5
 [74,]    3    5    4
 [75,]    3    5    3
 [76,]    3    5    2
 [77,]    3    5    1
 [78,]    3    5    0
 [79,]    3    4    5
 [80,]    3    4    4
 [81,]    3    4    3
 [82,]    3    4    2
 [83,]    3    4    1
 [84,]    3    4    0
 [85,]    3    3    5
 [86,]    3    3    4
 [87,]    3    3    3
 [88,]    3    3    2
 [89,]    3    3    1
 [90,]    3    3    0
 [91,]    3    2    5
 [92,]    3    2    4
 [93,]    3    2    3
 [94,]    3    2    2
 [95,]    3    2    1
 [96,]    3    2    0
 [97,]    3    1    5
 [98,]    3    1    4
 [99,]    3    1    3
[100,]    3    1    2
[101,]    3    1    1
[102,]    3    1    0
[103,]    3    0    5
[104,]    3    0    4
[105,]    3    0    3
[106,]    3    0    2
[107,]    3    0    1
[108,]    3    0    0
[109,]    2    5    5
[110,]    2    5    4
[111,]    2    5    3
[112,]    2    5    2
[113,]    2    5    1
[114,]    2    5    0
[115,]    2    4    5
[116,]    2    4    4
[117,]    2    4    3
[118,]    2    4    2
[119,]    2    4    1
[120,]    2    4    0
[121,]    2    3    5
[122,]    2    3    4
[123,]    2    3    3
[124,]    2    3    2
[125,]    2    3    1
[126,]    2    3    0
[127,]    2    2    5
[128,]    2    2    4
[129,]    2    2    3
[130,]    2    2    2
[131,]    2    2    1
[132,]    2    2    0
[133,]    2    1    5
[134,]    2    1    4
[135,]    2    1    3
[136,]    2    1    2
[137,]    2    1    1
[138,]    2    1    0
[139,]    2    0    5
[140,]    2    0    4
[141,]    2    0    3
[142,]    2    0    2
[143,]    2    0    1
[144,]    2    0    0
[145,]    1    5    5
[146,]    1    5    4
[147,]    1    5    3
[148,]    1    5    2
[149,]    1    5    1
[150,]    1    5    0
[151,]    1    4    5
[152,]    1    4    4
[153,]    1    4    3
[154,]    1    4    2
[155,]    1    4    1
[156,]    1    4    0
[157,]    1    3    5
[158,]    1    3    4
[159,]    1    3    3
[160,]    1    3    2
[161,]    1    3    1
[162,]    1    3    0
[163,]    1    2    5
[164,]    1    2    4
[165,]    1    2    3
[166,]    1    2    2
[167,]    1    2    1
[168,]    1    2    0
[169,]    1    1    5
[170,]    1    1    4
[171,]    1    1    3
[172,]    1    1    2
[173,]    1    1    1
[174,]    1    1    0
[175,]    1    0    5
[176,]    1    0    4
[177,]    1    0    3
[178,]    1    0    2
[179,]    1    0    1
[180,]    1    0    0
[181,]    0    5    5
[182,]    0    5    4
[183,]    0    5    3
[184,]    0    5    2
[185,]    0    5    1
[186,]    0    5    0
[187,]    0    4    5
[188,]    0    4    4
[189,]    0    4    3
[190,]    0    4    2
[191,]    0    4    1
[192,]    0    4    0
[193,]    0    3    5
[194,]    0    3    4
[195,]    0    3    3
[196,]    0    3    2
[197,]    0    3    1
[198,]    0    3    0
[199,]    0    2    5
[200,]    0    2    4
[201,]    0    2    3
[202,]    0    2    2
[203,]    0    2    1
[204,]    0    2    0
[205,]    0    1    5
[206,]    0    1    4
[207,]    0    1    3
[208,]    0    1    2
[209,]    0    1    1
[210,]    0    1    0
[211,]    0    0    5
[212,]    0    0    4
[213,]    0    0    3
[214,]    0    0    2
[215,]    0    0    1
> 
> 
> 
> cleanEx()
> nameEx("ill")
> ### * ill
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ill
> ### Title: Illegal immigrants in the Netherlands
> ### Aliases: ill
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(ill)
> 
> sdesc <- descriptive(ill, dtype="nbcap", dfreq=TRUE, t=Inf)
> plot(sdesc)
>    # A mixture model looks appropriate
> 
> closedp.0(ill, dtype="nbcap", dfreq=TRUE, t=Inf)

Number of captured units: 1880 

Abundance estimations and model fits:
              abundance  stderr  deviance  df     AIC
M0               7079.9   365.8    61.811   4  95.971
Mh Chao (LB)     9273.5   662.6     1.534   1  41.695
Mh Poisson2      8617.6   537.3    26.341   3  62.502
Mh Darroch      15562.1  1808.5     7.277   3  43.438
Mh Gamma3.5     29058.3  5496.8     3.661   3  39.822

> 
>    # We can try to fit a normal mixture model:
> closedpCI.0(ill, dtype="nbcap", dfreq=TRUE, t=Inf, m="Mh", h="Normal")

Number of captured units: 1880 

Abundance estimation, 95% confidence interval and model fit:
           abundance  stderr  InfCL    SupCL  deviance  df     AIC
Mh Normal    24453.7    4644  17026  35523.9     3.964   3  40.125

>    # We get an estimate similar to the Mh Gamma3.5 estimate.
> 
>    # Estimates are highly variable and it seems difficult to come up with a
>    # definitive answer. The lower bound estimate is useful in this context.
> closedpCI.0(ill, dtype="nbcap", dfreq=TRUE, t=Inf, m="Mh", h="LB")

Number of captured units: 1880 

Poisson estimation and model fit:
       abundance  stderr  deviance  df     AIC
Mh LB     9273.5   662.6     1.534   1  41.695

Multinomial estimation, 95% profile likelihood confidence interval:
       abundance   InfCL  SupCL
Mh LB     9267.5  8088.2  10704

>    # Considering the lower limit of a 95% confidence estimate for the lower bound, 
>    # there should be at least 8 000 illegal immigrants in the Netherlands. 
>    # Less than 25% have been caught.
> 
> 
> 
> cleanEx()
> nameEx("mvole")
> ### * mvole
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: mvole
> ### Title: Robust Design Data for Adult Male Meadow Voles
> ### Aliases: mvole
> ### Keywords: datasets
> 
> ### ** Examples
> 
>   # First, a between primary period Jolly-Seber analysis is obtained.
> data(mvole)
> mvole.pp<-periodhist(mvole,vt=rep(5,6))
> op.m1<-openp(mvole.pp,dfreq=TRUE)
> plot(op.m1)
>   # There is one large residual, removing the corresponding capture history 
>   # from the analysis does not change the results.  The model fits well.
> keep2<-residuals(op.m1$glm,type="pearson")<4
> op.m2<-openp(mvole.pp,dfreq=TRUE,keep=keep2)
> op.m2$model.fit
             deviance     df       AIC
fitted model  36.0454     47  150.9319
> 
>   # To find a suitable model within each primary period, the function closedp.t
>   # can be used repeatedly. Heterogeneity is detected in all periods except
>   # the second one where the data collection was perturbed (the last capture
>   # occasion doesn't have any new capture and is taken out of the analysis). 
> 
>   # In a robust design, we use Mh models for all primary periods bearing in
>   # mind the questionable fit in the second one. Since there is no time effect 
>   # within primary periods, we use the function robustd.0 to fit the model.
>   ### The following command might take a few minutes to run.
> rd.m1<-robustd.0(mvole[,-10], vt=c(5,4,rep(5,4)),vm="Mh",vh="Chao")
> rd.m1$model.fit
             deviance     df       AIC
fitted model 627.3967  38847  911.4528
> rd.m1$emig.fit
                                            deviance     df       AIC
model with homogeneous temporary emigration 627.2376  38846  913.2937
model with temporary emigration             621.8716  38843  913.9277
>   # The test for temporary immigration is not significant meaning that capture 
>   # probabilities estimated with the Jolly-Seber model are not different from 
>   # those estimated with the individual closed population models. The 
>   # differences, on the logit scale, of the Jolly-Seber minus the closed 
>   # population models capture probabilities are
> rd.m1$emig.param
             estimate    stderr
period 2    0.5896720 1.1255156
period 3    0.7590532 0.7494904
period 4    0.7576857 0.9043055
period 5   -1.6842044 0.9378936
homogenous  0.1690180 0.4260088
>   # Even in period 2, where the closed population model does not fit well, the 
>   # difference on the logit scale is non significant (estimate=.59, s.e.=1.12). 
> 
>   # The following command allows to fit a robust design that does not specify 
>   # any model for the second period.
>   ### The following command might take a few minutes to run.
> rd.m3<-robustd.0(mvole[,-10], vt=c(5,4,rep(5,4)),vm=c("Mh","none","Mh","Mh",
+                  "Mh","Mh"),vh="Chao")
> 
>   # With Darroch's model, the closed population estimates of the capture 
>   # probabilities are significantly smaller than those obtained from the 
>   # Jolly-Seber model.  This cannot be interpreted as indicating temporary 
>   # immigration. This suggests that Darroch's model is not appropriate within
>   # primary sessions.
> 
>   # The smallest AIC is obtained with the Poisson model, with parameter a=1.5 
>   # within sessions.
> rd.m4<-robustd.0(mvole[,-10], vt=c(5,4,rep(5,4)),vm="Mh",vh="Poisson",vtheta=1.5)
>   # The estimators of the demographic parameters obtained with the robust design 
>   # are similar to those obtained with the Jolly-Seber model applied to the 
>   # between primary period data.
> cbind(op.m1$survivals,rd.m4$survivals)
               estimate     stderr  estimate     stderr
period 1 -> 2 0.8195489 0.05653036 0.8228273 0.05516940
period 2 -> 3 0.5605845 0.06475147 0.5687647 0.06528882
period 3 -> 4 0.7011614 0.07268043 0.7261012 0.07697910
period 4 -> 5 0.5787844 0.06847395 0.5542232 0.06763400
period 5 -> 6        NA         NA 0.9989390 0.09125118
> cbind(op.m1$N,rd.m4$N)
         estimate   stderr estimate   stderr
period 1       NA       NA 63.17356 4.639529
period 2 75.10048 2.591686 75.53404 2.024295
period 3 59.69964 3.789494 61.41466 3.861024
period 4 62.64063 3.320978 67.22767 4.227080
period 5 55.60073 3.229606 53.70764 2.044445
period 6       NA       NA 92.35621 7.352186
> cbind(op.m1$birth,rd.m4$birth)
              estimate   stderr estimate   stderr
period 1 -> 2       NA       NA 23.55311 6.422676
period 2 -> 3 17.59948 5.025697 18.45357 5.181694
period 3 -> 4 20.78154 5.391299 22.63441 5.972292
period 4 -> 5 19.34531 5.349862 16.44851 4.822338
period 5 -> 6       NA       NA 38.70555 7.491438
> cbind(op.m1$Ntot,rd.m4$Ntot)
            estimate  stderr estimate   stderr
all periods  174.001 2.06165 182.9687 4.626267
> 
> 
> 
> cleanEx()
> nameEx("openp")
> ### * openp
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: openp
> ### Title: Loglinear Models for Open Population Capture-Recapture
> ###   Experiments
> ### Aliases: openp print.openp plot.openp
> ### Keywords: models
> 
> ### ** Examples
> 
> data(duck)
> op.m1 <- openp(duck, dfreq=TRUE)
> plot(op.m1)
> 
> # To remove the capture history 111111.
> keep2 <- apply(histpos.t(6),1,sum)!=6
> op.m2 <- openp(duck, dfreq=TRUE, keep=keep2)
> op.m2

Model fit:
              deviance      df        AIC
fitted model    67.311      48    308.366

Test for trap effect:
                                   deviance      df        AIC
model with homogenous trap effect    67.304      47    310.359
model with trap effect               63.038      45    310.092

Capture probabilities:
          estimate  stderr
period 1        --      --
period 2    0.4385  0.0354
period 3    0.4367  0.0362
period 4    0.4152  0.0346
period 5    0.3900  0.0311
period 6        --      --

Survival probabilities:
               estimate  stderr
period 1 -> 2    0.4422  0.0265
period 2 -> 3    0.9655  0.0574
period 3 -> 4    0.7092  0.0454
period 4 -> 5    1.0000  0.0000
period 5 -> 6        --      --

Abundances:
          estimate  stderr
period 1        --      --
period 2     388.3    20.8
period 3     470.0    28.9
period 4     368.6    19.1
period 5     471.2    24.5
period 6        --      --

Number of new arrivals:
               estimate  stderr
period 1 -> 2        --      --
period 2 -> 3      95.1    25.5
period 3 -> 4      35.3    20.3
period 4 -> 5     102.6    25.9
period 5 -> 6        --      --

Total number of units who ever inhabited the survey area:
             estimate  stderr
all periods     971.5    13.1

Total number of captured units: 896 

> 
> # To remove the capture histories with 5 captures or more
> keep3 <- apply(histpos.t(6),1,sum)<5
> op.m3 <- openp(duck, dfreq=TRUE, keep=keep3)
> op.m3

Model fit:
              deviance      df        AIC
fitted model    56.831      42    277.201

Test for trap effect:
                                   deviance      df        AIC
model with homogenous trap effect    56.499      41    278.870
model with trap effect               52.337      39    278.708

Capture probabilities:
          estimate  stderr
period 1        --      --
period 2    0.4111  0.0382
period 3    0.4131  0.0394
period 4    0.3728  0.0373
period 5    0.3552  0.0333
period 6        --      --

Survival probabilities:
               estimate  stderr
period 1 -> 2    0.4360  0.0282
period 2 -> 3    0.9659  0.0650
period 3 -> 4    0.7076  0.0508
period 4 -> 5    1.0000  0.0000
period 5 -> 6        --      --

Abundances:
          estimate  stderr
period 1        --      --
period 2     395.8    23.0
period 3     483.6    32.4
period 4     386.9    22.8
period 5     494.2    29.0
period 6        --      --

Number of new arrivals:
               estimate  stderr
period 1 -> 2        --      --
period 2 -> 3     101.3    27.7
period 3 -> 4      44.7    23.1
period 4 -> 5     107.3    29.8
period 5 -> 6        --      --

Total number of units who ever inhabited the survey area:
             estimate  stderr
all periods     985.4      15

Total number of captured units: 896 

> 
> 
> data(mvole)
> mvole.op<-periodhist(mvole,vt=rep(5,6))
> openp(mvole.op, dfreq=TRUE)

Model fit:
              deviance      df        AIC
fitted model     43.51      48    160.396

Test for trap effect:
                                   deviance      df        AIC
model with homogenous trap effect    41.248      47    160.134
model with trap effect               40.018      45    162.905

Capture probabilities:
          estimate  stderr
period 1        --      --
period 2    0.9587  0.0403
period 3    0.8208  0.0720
period 4    0.9100  0.0603
period 5    0.8273  0.0698
period 6        --      --

Survival probabilities:
               estimate  stderr
period 1 -> 2    0.8195  0.0565
period 2 -> 3    0.5606  0.0648
period 3 -> 4    0.7012  0.0727
period 4 -> 5    0.5788  0.0685
period 5 -> 6        --      --

Abundances:
          estimate  stderr
period 1        --      --
period 2      75.1     2.6
period 3      59.7     3.8
period 4      62.6     3.3
period 5      55.6     3.2
period 6        --      --

Number of new arrivals:
               estimate  stderr
period 1 -> 2        --      --
period 2 -> 3      17.6     5.0
period 3 -> 4      20.8     5.4
period 4 -> 5      19.3     5.3
period 5 -> 6        --      --

Total number of units who ever inhabited the survey area:
             estimate  stderr
all periods       174     2.1

Total number of captured units: 171 

> 
> 
> 
> cleanEx()
> nameEx("periodhist")
> ### * periodhist
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: periodhist
> ### Title: Merge capture occasions
> ### Aliases: periodhist
> ### Keywords: manip
> 
> ### ** Examples
> 
> data(mvole)
> mvole.op<-periodhist(mvole,vt=rep(5,6))
> openp(mvole.op, dfreq=TRUE)

Model fit:
              deviance      df        AIC
fitted model     43.51      48    160.396

Test for trap effect:
                                   deviance      df        AIC
model with homogenous trap effect    41.248      47    160.134
model with trap effect               40.018      45    162.905

Capture probabilities:
          estimate  stderr
period 1        --      --
period 2    0.9587  0.0403
period 3    0.8208  0.0720
period 4    0.9100  0.0603
period 5    0.8273  0.0698
period 6        --      --

Survival probabilities:
               estimate  stderr
period 1 -> 2    0.8195  0.0565
period 2 -> 3    0.5606  0.0648
period 3 -> 4    0.7012  0.0727
period 4 -> 5    0.5788  0.0685
period 5 -> 6        --      --

Abundances:
          estimate  stderr
period 1        --      --
period 2      75.1     2.6
period 3      59.7     3.8
period 4      62.6     3.3
period 5      55.6     3.2
period 6        --      --

Number of new arrivals:
               estimate  stderr
period 1 -> 2        --      --
period 2 -> 3      17.6     5.0
period 3 -> 4      20.8     5.4
period 4 -> 5      19.3     5.3
period 5 -> 6        --      --

Total number of units who ever inhabited the survey area:
             estimate  stderr
all periods       174     2.1

Total number of captured units: 171 

> 
> 
> 
> cleanEx()
> nameEx("profileCI")
> ### * profileCI
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: profileCI
> ### Title: Profile Likelihood Confidence Interval for Abundance Estimation
> ###   in Closed Populations Capture-Recapture Experiments
> ### Aliases: profileCI print.profileCI
> ### Keywords: models
> 
> ### ** Examples
> 
> data(hare)
> profileCI(hare, m = "Mth", h = "Poisson", a = 2)

Number of captured units: 68 

95% profile likelihood confidence interval:
              abundance     InfCL     SupCL
Mth Poisson2         80  71.84073  93.84254

> 
> data(HIV)
> mat<-histpos.t(4)
> mX2<-cbind(mat,mat[,1]*mat[,2])
> 
> profileCI(hare,m="Mh",h="Chao")

Number of captured units: 68 

95% profile likelihood confidence interval:
         abundance     InfCL     SupCL
Mh Chao         78  70.61178  95.73803

> 
> 
> 
> cleanEx()
> nameEx("rbvole")
> ### * rbvole
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rbvole
> ### Title: Robust Design Data for Red-Back Voles
> ### Aliases: rbvole
> ### Keywords: datasets
> 
> ### ** Examples
> 
>   # According to Rivest and Daigle (2004), a good robust design model
>   # for this data set is formed of an Mth Chao model for each period.
>   # This model can be fitted as follows.
>   
> ### data(rbvole)
> ### memory.limit(size=2000)
> ### rd<-robustd.t(rbvole,dfreq=TRUE,vt=rep(3,6),vm="Mth",vh="Chao")
> 
>   # WARNING : Because the data has 18 capture occasions, fitting this
>   # model uses a lot of memory. Its runtime is several minutes long.
> 
> 
> 
> cleanEx()
> nameEx("robustd")
> ### * robustd
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: robustd
> ### Title: Loglinear Models for Capture-Recapture Experiments Carried Out
> ###   According to a Robust Design
> ### Aliases: robustd robustd.t robustd.0 print.robustd
> ### Keywords: models
> 
> ### ** Examples
> 
> data(mvole)
> 
>   # The mvole data set contains a total of 30 capture occasions (the 
>   # tenth capture occasion doesn't have any new capture and is taken
>   # out of the analysis). This number being large, we can only use 
>   # the robustd.0 function to fit a robust design model.
> robustd.0(mvole[,-10],vt=c(5,4,rep(5,4)),vm="Mh",vh="Poisson",vtheta=1.5)

Closed population model for every period: Mh Poisson1.5 

Model fit:
              deviance      df        AIC
fitted model   638.099   38856    904.155

Test for temporary emigration:
                                             deviance      df        AIC
model with homogeneous temporary emigration   637.654   38855    905.711
model with temporary emigration               632.716   38852    906.772

Capture probabilities:
          estimate  stderr
period 1    0.8864  0.0514
period 2    0.9506  0.0224
period 3    0.7779  0.0561
period 4    0.8157  0.0524
period 5    0.8911  0.0390
period 6    0.8337  0.0539

Survival probabilities:
               estimate  stderr
period 1 -> 2    0.8228  0.0552
period 2 -> 3    0.5688  0.0653
period 3 -> 4    0.7261  0.0770
period 4 -> 5    0.5542  0.0676
period 5 -> 6    0.9989  0.0913

Abundances:
          estimate  stderr
period 1      63.2     4.6
period 2      75.5     2.0
period 3      61.4     3.9
period 4      67.2     4.2
period 5      53.7     2.0
period 6      92.4     7.4

Number of new arrivals:
               estimate  stderr
period 1 -> 2      23.6     6.4
period 2 -> 3      18.5     5.2
period 3 -> 4      22.6     6.0
period 4 -> 5      16.4     4.8
period 5 -> 6      38.7     7.5

Total number of units who ever inhabited the survey area:
             estimate  stderr
all periods       183     4.6

Total number of captured units: 171 

> # Not run: 
> # robustd.t(mvole[,-10],vt=c(5,4,rep(5,4)),vm="Mh",vh="Poisson",vtheta=1.5)
> # should fail
> 
>   # Considering only the first 3 periods of the data set, we can use the 
>   # robustd.t function to fit a model with a temporal effect.
> robustd.t(mvole[,c(1:9,11:15)],vt=c(5,4,5),vm="Mth",vh="Poisson",vtheta=1.5)

Closed population model for every period: Mth Poisson1.5 

Model fit:
              deviance      df        AIC
fitted model   481.231   16361     696.76

Test for temporary emigration:
                                 deviance      df        AIC
model with temporary emigration   481.219   16360    698.748

Capture probabilities:
          estimate  stderr
period 1    0.8889  0.0506
period 2    0.9483  0.0236
period 3    0.7359  0.0886

Survival probabilities:
               estimate  stderr
period 1 -> 2    0.8268  0.0558
period 2 -> 3    0.6218  0.1091

Abundances:
          estimate  stderr
period 1      63.0     4.6
period 2      75.8     2.2
period 3      66.6     9.4

Number of new arrivals:
               estimate  stderr
period 1 -> 2      23.7     6.4
period 2 -> 3      19.4     5.8

Total number of units who ever inhabited the survey area:
             estimate  stderr
all periods     106.2     3.9

Total number of captured units: 99 

> 
> 
> 
> cleanEx()
> nameEx("uifit")
> ### * uifit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: uifit
> ### Title: Closed Population Models Fit Statistics Concerning the ui
> ### Aliases: uifit
> ### Keywords: univar
> 
> ### ** Examples
> 
> data(mvole)
> period3<-mvole[,11:15]
> cp <- closedp(period3)
> uifit(cp)
$predicted
    observed          M0        Mt Mh Chao (LB) Mh Poisson2 Mh Darroch
u1        26 24.20000006 26.000000         24.2  24.2000000  24.200000
u2        12 12.72945291 14.682480          9.9  10.1340984   9.900000
u3         3  6.69582524  4.021674          6.2   6.5764481   6.340635
u4         6  3.52207405  3.052668          4.7   4.6588525   4.747957
u5         2  1.85264775  1.243178          4.0   3.4306010   3.811407
u6        NA  0.97451208        NA           NA   2.5849972   3.180338
u7        NA  0.51260353        NA           NA   1.9785928   2.720707
u8        NA  0.26963482        NA           NA   1.5319327   2.368835
u9        NA  0.14183073        NA           NA   1.1965924   2.089944
u10       NA  0.07460445        NA           NA   0.9411818   1.863153
    Mh Gamma3.5 Mth Chao (LB) Mth Poisson2 Mth Darroch Mth Gamma3.5          Mb
u1    24.200000     26.000000    26.000000   26.000000    26.000000 24.23488618
u2     9.886967     12.684041    13.016396   12.766312    12.700416 12.72739198
u3     6.231965      3.400478     3.613029    3.466377     3.416891  6.68402176
u4     4.746808      4.540107     4.309652    4.505152     4.547187  3.51023580
u5     3.934260      2.375374     2.060923    2.262159     2.335506  1.84346428
u6           NA            NA           NA          NA           NA  0.96812885
u7           NA            NA           NA          NA           NA  0.50843050
u8           NA            NA           NA          NA           NA  0.26701154
u9           NA            NA           NA          NA           NA  0.14022597
u10          NA            NA           NA          NA           NA  0.07364223
          Mbh
u1  26.000000
u2  10.488586
u3   6.346830
u4   3.840580
u5   2.324003
u6         NA
u7         NA
u8         NA
u9         NA
u10        NA

$fit.stat
              Chi-suare value
M0                  3.9706755
Mt                  4.0560065
Mh Chao (LB)        3.5905262
Mh Poisson2         3.4050589
Mh Darroch          3.5304439
Mh Gamma3.5         3.5434342
Mth Chao (LB)       0.6128091
Mth Poisson2        0.8481757
Mth Darroch         0.6351315
Mth Gamma3.5        0.6018579
Mb                  3.9798969
Mbh                 3.2419924

$day.first.capt
                  Mean Variance
observed      1.897959 1.438567
M0            1.899957 1.248317
Mt            1.752174 1.028806
Mh Chao (LB)  2.069388 1.733961
Mh Poisson2   2.040530 1.636873
Mh Darroch    2.062669 1.706994
Mh Gamma3.5   2.067926 1.726560
Mth Chao (LB) 1.869527 1.389901
Mth Poisson2  1.845206 1.310732
Mth Darroch   1.862513 1.365718
Mth Gamma3.5  1.867710 1.383013
Mb            1.897959 1.245731
Mbh           1.897959 1.390102

> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  35.74 1.53 37.74 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
